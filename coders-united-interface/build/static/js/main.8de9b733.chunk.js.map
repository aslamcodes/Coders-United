{"version":3,"sources":["Components/UI/Form.module.css","Components/UI/Navbar.module.css","Components/Helpers/Card.module.css","Components/UI/Button.module.css","Components/Helpers/Container.module.css","Components/Helpers/Alert.module.css","Components/Helpers/Cards.module.css","Context/Authentication/constants.ts","Context/Authentication/reducer.ts","Context/Authentication/AuthContext.tsx","Components/Auth/RequireAuth.tsx","Components/Helpers/Container.tsx","Context/Authentication/action.ts","Components/Helpers/Spinners.tsx","Components/UI/Button.tsx","Components/UI/Navbar.tsx","hooks/useAxiosWithCallback.ts","hooks/useChannels.ts","utils/utils.ts","Components/UI/Form.tsx","Components/UI/Roles.tsx","hooks/useRoles.ts","Components/UI/SendEmbedForm.tsx","Components/UI/SendFile.tsx","Components/Helpers/Alert.tsx","Components/UI/SendMessageForm.tsx","Components/Helpers/Card.tsx","Components/Helpers/Cards.tsx","Pages/Home.tsx","Pages/Admin.tsx","Pages/Login.tsx","App.tsx","Context/ContextProvider.tsx","index.tsx"],"names":["module","exports","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","initialState","user","JSON","parse","localStorage","getItem","isLoading","errorMessage","AuthReducer","state","action","type","payload","Error","AuthContext","createContext","AuthDispatchContext","AuthContextProvider","children","useReducer","userInfo","dispatch","Provider","value","useAuthContext","context","useContext","undefined","useAuthDispatch","displayName","RequireAuth","location","useLocation","to","from","Container","className","styles","loginUser","loginPayload","a","email","password","config","headers","axios","post","data","setItem","stringify","response","message","logout","removeItem","document","href","Loader","src","alt","width","variants","primary","backgroundColor","color","secondary","Button","variant","enableLoading","disabled","props","style","button","loading","Navbar","navbar","logo","isAdmin","onClick","target","rel","useAxiosWithCallback","useState","setIsLoading","error","setError","fetchData","useCallback","callback","axiosConfig","method","status","useEffect","useChannels","fetch","channels","setChannels","applyChannels","fetchChannels","url","Authorization","token","getOptionsFor","values","map","id","label","name","Form","form","Group","Input","Label","Title","Select","options","getSelectStyles","TextArea","FileSelect","title","htmlFor","control","base","background","borderColor","borderRadius","padding","menu","option","fontSize","placeholder","menuList","singleValue","multiValue","multiValueLabel","Roles","roles","setRoles","applyRoles","useRoles","sendData","setMessage","selectedRoles","setSelectedRoles","selectedChannel","setSelectedChannel","onSubmitHandler","e","preventDefault","messageObject","channelId","onSubmit","onChange","isMulti","embedInitialState","description","authorName","authorUrl","contentText","embedReducer","SendEmbedForm","sendEmbed","embed","embedItems","idx","accept","display","SendFile","file","setFile","setSeletedChannel","submitHandler","formData","FormData","append","console","log","length","slice","files","icon","Alert","alert","SendMessageForm","channelError","sending","sendMessage","handleSubmit","Card","desc","card","Cards","cards","HOMEPAGECARDS","image","Home","ADMINPAGECARDS","Admin","pathname","Login","setEmail","setPassword","navigate","useNavigate","replace","App","element","path","ContextProvider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8de9b733.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1wfN0\",\"form-container\":\"Form_form-container__11gC7\",\"form-input\":\"Form_form-input__oG8u7\",\"form-label\":\"Form_form-label__2o_Lt\",\"form-group\":\"Form_form-group__1tpFL\",\"form-title\":\"Form_form-title__PpyFO\",\"form-option\":\"Form_form-option__1dE5E\",\"form-file-input\":\"Form_form-file-input__qP2aZ\",\"form-textarea\":\"Form_form-textarea__1fjeD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__nkbbQ\",\"logo\":\"Navbar_logo__3sIQC\",\"nav-actions\":\"Navbar_nav-actions__14AZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2rBlJ\",\"title\":\"Card_title__wrbAm\",\"desc\":\"Card_desc__s5qv4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3M_50\",\"loading\":\"Button_loading__29sfR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2HxkK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__3ZNVA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"Cards_cards__28qbS\"};","export const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n","import { LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS } from \"./constants\";\r\n\r\nexport const initialState = {\r\n  user: JSON.parse(localStorage.getItem(\"userInfo\")) || null,\r\n  isLoading: false,\r\n  errorMessage: null,\r\n};\r\n\r\nexport const AuthReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      return {\r\n        isLoading: true,\r\n        user: null,\r\n        errorMessage: null,\r\n      };\r\n\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        user: action.payload,\r\n        errorMessage: null,\r\n      };\r\n\r\n    case LOGIN_FAILURE:\r\n      return {\r\n        user: null,\r\n        isLoading: false,\r\n        errorMessage: action.payload,\r\n      };\r\n\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...state,\r\n        user: \"\",\r\n      };\r\n\r\n    default:\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n  }\r\n};\r\n","import { createContext, Dispatch, useContext, useReducer } from \"react\";\r\nimport { AuthReducer, initialState } from \"./reducer\";\r\n\r\n// Contexts\r\nexport const AuthContext = createContext(initialState);\r\n\r\nexport const AuthDispatchContext = createContext({} as Dispatch<any>);\r\n\r\n// Providers\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [userInfo, dispatch] = useReducer(AuthReducer, initialState);\r\n\r\n  return (\r\n    <AuthContext.Provider value={userInfo}>\r\n      <AuthDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </AuthDispatchContext.Provider>\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Hooks\r\nexport const useAuthContext = () => {\r\n  const context = useContext(AuthContext);\r\n\r\n  if (context === undefined) {\r\n    throw new Error(\"useAuthContext in not within AuthProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const useAuthDispatch = () => {\r\n  const context = useContext(AuthDispatchContext);\r\n\r\n  if (context === undefined) {\r\n    throw new Error(\"useAuthDispatch in not within AuthProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nAuthContext.displayName = \"User Authentication Context\";\r\n","import { Navigate, Outlet, useLocation } from \"react-router-dom\";\r\nimport { useAuthContext } from \"../../Context/Authentication/AuthContext\";\r\n\r\nexport const RequireAuth = () => {\r\n  const { user } = useAuthContext();\r\n  const location = useLocation();\r\n\r\n  if (!user) {\r\n    return <Navigate to=\"/login\" state={{ from: location }} />;\r\n  }\r\n\r\n  return <Outlet />;\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Container.module.css\";\r\nexport const Container = ({ children }) => {\r\n  return <div className={styles[\"container\"]}>{children}</div>;\r\n};\r\n","import {\r\n  LOGIN_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n} from \"./constants\";\r\nimport axios from \"axios\";\r\n\r\nexport const loginUser = async (\r\n  dispatch: React.Dispatch<any>,\r\n  loginPayload\r\n) => {\r\n  dispatch({ type: LOGIN_REQUEST });\r\n\r\n  const { email, password } = loginPayload;\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const { data } = await axios.post(\r\n      \"/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGIN_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: LOGOUT });\r\n  document.location.href = \"/\";\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Loader = () => {\r\n  return <img src=\"/icons/loading.svg\" alt=\"loading...\" width={40} />;\r\n};\r\n","import React from \"react\";\r\nimport { Loader } from \"../Helpers/Spinners\";\r\nimport styles from \"./Button.module.css\";\r\n\r\nconst variants = {\r\n  primary: {\r\n    backgroundColor: \"#4eb56e\",\r\n    color: \"#fff\",\r\n  },\r\n  secondary: {\r\n    backgroundColor: \"#272934\",\r\n    color: \"#fff\",\r\n  },\r\n};\r\n\r\nexport const Button = ({\r\n  children,\r\n  variant = \"primary\",\r\n  enableLoading = false,\r\n  disabled = false,\r\n  ...props\r\n}) => {\r\n  function MouseOver(event) {\r\n    event.target.style.background = \"red\";\r\n  }\r\n  function MouseOut(event) {\r\n    event.target.style.background = \"\";\r\n  }\r\n\r\n  return (\r\n    <button\r\n      {...props}\r\n      style={{\r\n        ...variants[variant],\r\n      }}\r\n      className={styles.button}\r\n      disabled={disabled}\r\n    >\r\n      {enableLoading && disabled ? (\r\n        <div className={styles.loading}>\r\n          <Loader />\r\n        </div>\r\n      ) : (\r\n        children\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logout } from \"../../Context/Authentication/action\";\r\nimport {\r\n  useAuthContext,\r\n  useAuthDispatch,\r\n} from \"../../Context/Authentication/AuthContext\";\r\nimport { Button } from \"./Button\";\r\nimport styles from \"./Navbar.module.css\";\r\nexport const Navbar = () => {\r\n  const { user } = useAuthContext();\r\n  const dispatch = useAuthDispatch();\r\n\r\n  return (\r\n    <header>\r\n      <nav className={styles.navbar}>\r\n        <div>\r\n          <img\r\n            src=\"/logo.svg\"\r\n            alt=\"Coders United logo\"\r\n            className={styles.logo}\r\n          />\r\n          <h1>Coders United</h1>\r\n        </div>\r\n        <div className={styles[\"nav-actions\"]}>\r\n          {user ? (\r\n            user.isAdmin ? (\r\n              <>\r\n                <Link to=\"admin\">\r\n                  <Button variant=\"secondary\">Admin Actions</Button>\r\n                </Link>\r\n                <Button variant=\"secondary\" onClick={() => logout(dispatch)}>\r\n                  Logout\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <Button variant=\"secondary\" onClick={() => logout(dispatch)}>\r\n                Logout\r\n              </Button>\r\n            )\r\n          ) : (\r\n            <Link to=\"/login\">\r\n              <Button variant=\"secondary\">Login</Button>\r\n            </Link>\r\n          )}\r\n\r\n          <Button variant=\"primary\">\r\n            <a\r\n              href=\"https://discord.gg/UhytVdnr4Q\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              Join the server💖\r\n            </a>\r\n          </Button>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n","import { useEffect, useState, useCallback } from \"react\";\r\nimport axios, { AxiosRequestConfig } from \"axios\";\r\n\r\nexport default function useAxiosWithCallback() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchData = useCallback(\r\n    async (config: AxiosRequestConfig, callback = () => {}) => {\r\n      const axiosConfig = {\r\n        method: \"get\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          ...config.headers,\r\n        },\r\n        ...config,\r\n      } as AxiosRequestConfig;\r\n\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await axios(axiosConfig);\r\n        if (!response.status) {\r\n          throw new Error(\"Problem connecting to server\");\r\n        }\r\n        callback(response.data);\r\n      } catch (error) {\r\n        setError(error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    },\r\n    []\r\n  );\r\n  useEffect(() => {\r\n    const fetchData = async () => {};\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return { isLoading, error, fetchData };\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { useAuthContext } from \"../Context/Authentication/AuthContext\";\r\nimport useAxiosWithCallback from \"./useAxiosWithCallback\";\r\n\r\nexport default function useChannels() {\r\n  const { isLoading, fetchData: fetch, error } = useAxiosWithCallback();\r\n  const [channels, setChannels] = useState([]);\r\n  const { user } = useAuthContext();\r\n\r\n  useEffect(() => {\r\n    const applyChannels = (channels) => {\r\n      setChannels(channels);\r\n    };\r\n    const fetchChannels = async () => {\r\n      await fetch(\r\n        {\r\n          url: \"/channels\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + user.token,\r\n          },\r\n        },\r\n        applyChannels\r\n      );\r\n    };\r\n    fetchChannels();\r\n  }, [user, fetch]);\r\n\r\n  return { isLoading, error, channels };\r\n}\r\n","export const getOptionsFor = (values) =>\r\n  values.map(({ id, name }) => {\r\n    return { value: id, label: name };\r\n  });\r\n","import styles from \"./Form.module.css\";\r\nimport Select from \"react-select\";\r\nimport { FaFileUpload } from \"react-icons/fa\";\r\nexport default function Form({ children, className = \"\", ...props }) {\r\n  return (\r\n    <div className={`${styles[\"form-container\"]}`}>\r\n      <form {...props} className={styles.form}>\r\n        {children}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nForm.Group = ({ children, ...props }) => (\r\n  <div {...props} className={styles[\"form-group\"]}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nForm.Input = ({ ...props }) => (\r\n  <input className={styles[\"form-input\"]} {...props} />\r\n);\r\n\r\nForm.Label = ({ children, ...props }) => (\r\n  <label className={styles[\"form-label\"]} {...props}>\r\n    {children}\r\n  </label>\r\n);\r\n\r\nForm.Title = ({ children, ...props }) => (\r\n  <p className={styles[\"form-title\"]} {...props}>\r\n    {children}\r\n  </p>\r\n);\r\n\r\nForm.Select = ({ options, ...props }) => {\r\n  return <Select options={options} styles={getSelectStyles()} {...props} />;\r\n};\r\n\r\nForm.TextArea = ({ ...props }) => {\r\n  return <textarea className={styles[\"form-textarea\"]} {...props}></textarea>;\r\n};\r\n\r\nForm.FileSelect = ({ title, ...props }) => {\r\n  return (\r\n    <div className={styles[\"form-file-input\"]}>\r\n      <label htmlFor=\"file-input\">\r\n        <p>{title}</p>\r\n        <FaFileUpload />\r\n      </label>\r\n      <input id=\"file-input\" type=\"file\" {...props} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getSelectStyles = () => ({\r\n  control: (base) => ({\r\n    ...base,\r\n    background: \"#272934\",\r\n    borderColor: \"#272934\",\r\n    borderRadius: \"10px\",\r\n    padding: \"5px\",\r\n    \"&:hover\": {\r\n      borderColor: \"#272934\",\r\n    },\r\n  }),\r\n  menu: (base) => ({\r\n    ...base,\r\n    background: \"#272934\",\r\n    color: \"#fff\",\r\n  }),\r\n  option: (base) => ({\r\n    ...base,\r\n    color: \"#fff\",\r\n    backgroundColor: \"#272934\",\r\n    fontSize: \"20px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#36393f\",\r\n    },\r\n  }),\r\n  placeholder: (base) => ({ ...base, fontSize: \"20px\" }),\r\n  menuList: (base) => ({\r\n    ...base,\r\n    borderRadius: \"10px\",\r\n  }),\r\n  singleValue: (base, state) => ({\r\n    ...base,\r\n    color: \"#fff\",\r\n    fontSize: \"20px\",\r\n  }),\r\n  multiValue: (base, state) => ({\r\n    ...base,\r\n    fontSize: \"20px\",\r\n    backgroundColor: \"#36393F\",\r\n    color: \"#fff\",\r\n  }),\r\n  multiValueLabel: (base, state) => ({\r\n    ...base,\r\n    color: \"#fff\",\r\n  }),\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { useAuthContext } from \"../../Context/Authentication/AuthContext\";\r\nimport useAxiosWithCallback from \"../../hooks/useAxiosWithCallback\";\r\nimport useChannels from \"../../hooks/useChannels\";\r\nimport useRoles from \"../../hooks/useRoles\";\r\nimport { getOptionsFor } from \"../../utils/utils\";\r\nimport { Button } from \"./Button\";\r\nimport Form from \"./Form\";\r\n\r\nexport const Roles = () => {\r\n  const { roles } = useRoles();\r\n  const { channels } = useChannels();\r\n  const { fetchData: sendData } = useAxiosWithCallback();\r\n  const { user } = useAuthContext();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [selectedRoles, setSelectedRoles] = useState([]);\r\n  const [selectedChannel, setSelectedChannel] = useState(\"\");\r\n  const messageChangeHandler = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const onRoleSelectHandler = (roles) => {\r\n    setSelectedRoles(roles);\r\n  };\r\n\r\n  const onChannelChangeHandler = ({ value }) => {\r\n    setSelectedChannel(value);\r\n  };\r\n  const onSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    const messageObject = {\r\n      message,\r\n      channelId: selectedChannel,\r\n      roles: selectedRoles,\r\n    };\r\n    await sendData({\r\n      url: \"/channels/role-menu\",\r\n      method: \"POST\",\r\n      data: messageObject,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + user.token,\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <Form onSubmit={onSubmitHandler}>\r\n      <Form.Group>\r\n        <Form.Title>Make users receive roles interactively</Form.Title>\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Select a channel</Form.Label>\r\n        <Form.Select\r\n          onChange={onChannelChangeHandler}\r\n          options={getOptionsFor(channels)}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Message to display on the channel</Form.Label>\r\n        <Form.TextArea value={message} onChange={messageChangeHandler} />\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Choose the roles</Form.Label>\r\n        <Form.Select\r\n          options={getOptionsFor(roles)}\r\n          onChange={onRoleSelectHandler}\r\n          isMulti\r\n        />\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Button type=\"submit\">Save</Button>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useAuthContext } from \"../Context/Authentication/AuthContext\";\r\nimport useAxiosWithCallback from \"./useAxiosWithCallback\";\r\n\r\nexport default function useRoles() {\r\n  const { isLoading, fetchData: fetch, error } = useAxiosWithCallback();\r\n  const [roles, setRoles] = useState([]);\r\n  const { user } = useAuthContext();\r\n\r\n  useEffect(() => {\r\n    const applyRoles = (roles) => {\r\n      setRoles(roles);\r\n    };\r\n    const fetchChannels = async () => {\r\n      await fetch(\r\n        {\r\n          url: \"/channels/role-menu\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + user.token,\r\n          },\r\n        },\r\n        applyRoles\r\n      );\r\n    };\r\n    fetchChannels();\r\n  }, [user, fetch]);\r\n\r\n  return { isLoading, error, roles };\r\n}\r\n","import React, { useState, useReducer } from \"react\";\r\nimport { useAuthContext } from \"../../Context/Authentication/AuthContext\";\r\nimport useAxiosWithCallback from \"../../hooks/useAxiosWithCallback\";\r\nimport useChannels from \"../../hooks/useChannels\";\r\n\r\nconst embedInitialState = {\r\n  title: \"\",\r\n  description: \"\",\r\n  url: \"\",\r\n  authorName: \"\",\r\n  authorUrl: \"\",\r\n  contentText: \"\",\r\n};\r\n\r\nconst embedReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_TITLE\":\r\n      return { ...state, title: action.payload };\r\n    case \"SET_DESCRIPTION\":\r\n      return { ...state, description: action.payload };\r\n    case \"SET_URL\":\r\n      return { ...state, url: action.payload };\r\n    case \"SET_AUTHOR_NAME\":\r\n      return { ...state, authorName: action.payload };\r\n    case \"SET_AUTHOR_URL\":\r\n      return { ...state, authorUrl: action.payload };\r\n    case \"SET_CONTENT_TEXT\":\r\n      return { ...state, contentText: action.payload };\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const SendEmbedForm = () => {\r\n  const {\r\n    isLoading: isFetchLoading,\r\n    error: isErrorInFetching,\r\n    fetchData: sendEmbed,\r\n  } = useAxiosWithCallback();\r\n  const {\r\n    isLoading: isChannelsLoading,\r\n    channels,\r\n    error: isErrorInChannel,\r\n  } = useChannels();\r\n  const [selectedChannel, setSelectedChannel] = useState();\r\n  const { user } = useAuthContext();\r\n  const onSelectedChannelChangeHandler = (e) => {\r\n    setSelectedChannel(e.target.value);\r\n  };\r\n  const onSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    await sendEmbed({\r\n      method: \"POST\",\r\n      url: \"/channels/embed\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + user.token,\r\n      },\r\n      data: {\r\n        embed: {\r\n          title: embedItems.title,\r\n          description: embedItems.description,\r\n          url: embedItems.url,\r\n          authorName: embedItems.authorName,\r\n          authorUrl: embedItems.authorUrl,\r\n          contentText: embedItems.contentText,\r\n        },\r\n        channelId: selectedChannel,\r\n      },\r\n    });\r\n  };\r\n\r\n  const [embedItems, dispatch] = useReducer(embedReducer, embedInitialState);\r\n\r\n  const onTitleChangeHandler = (e) => {\r\n    dispatch({ type: \"SET_TITLE\", payload: e.target.value });\r\n  };\r\n  const onDescriptionChangeHandler = (e) => {\r\n    dispatch({ type: \"SET_DESCRIPTION\", payload: e.target.value });\r\n  };\r\n  const onUrlChangeHandler = (e) => {\r\n    dispatch({ type: \"SET_URL\", payload: e.target.value });\r\n  };\r\n  const onAuthorNameChangeHandler = (e) => {\r\n    dispatch({ type: \"SET_AUTHOR_NAME\", payload: e.target.value });\r\n  };\r\n  const onAuthorUrlChangeHandler = (e) => {\r\n    dispatch({ type: \"SET_AUTHOR_URL\", payload: e.target.value });\r\n  };\r\n  const onContentTextChangeHandler = (e) => {\r\n    dispatch({ type: \"SET_CONTENT_TEXT\", payload: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmitHandler}>\r\n      <div className=\"embed-box\">\r\n        <div className=\"embed-content\">\r\n          <div className=\"embed-item\">\r\n            <h4>POST IN CHANNEL</h4>\r\n            <select id=\"channel\" onChange={onSelectedChannelChangeHandler}>\r\n              {channels.map(({ id, name }, idx) => {\r\n                return (\r\n                  <option key={`id-${id}${name}${idx}`} value={id}>\r\n                    {name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"embed-item\">\r\n            <h4>DESCRIPTION</h4>\r\n            <input\r\n              type=\"text\"\r\n              onChange={onDescriptionChangeHandler}\r\n              placeholder=\"insert a short description\"\r\n              value={embedItems.description}\r\n            />\r\n          </div>\r\n          <div className=\"embed-item\">\r\n            <h4>EMBED</h4>\r\n            <label htmlFor=\"color-picker\">COLOR:</label>\r\n            <input type=\"color\" id=\"color-picker\" />\r\n\r\n            <div className=\"embed-author\">\r\n              <div className=\"embed-author-item\">\r\n                <h6>Author image</h6>\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"image/gif, image/jpeg, image/jpg, image/png\"\r\n                  style={{ display: \"\" }}\r\n                />\r\n              </div>\r\n              <div className=\"embed-author-item\">\r\n                <h6>Author name</h6>\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={onAuthorNameChangeHandler}\r\n                  placeholder=\"Author name\"\r\n                  value={embedItems.authorName}\r\n                />\r\n              </div>\r\n              <div className=\"embed-author-item\">\r\n                <h6>Author url</h6>\r\n                <input\r\n                  type=\"url\"\r\n                  onChange={onAuthorUrlChangeHandler}\r\n                  placeholder=\"Author url\"\r\n                  value={embedItems.authorUrl}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"embed-title\">\r\n              <div className=\"embed-title-item\">\r\n                <h6>Title text</h6>\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={onTitleChangeHandler}\r\n                  placeholder=\"Title text\"\r\n                  value={embedItems.title}\r\n                />\r\n              </div>\r\n              <div className=\"embed-title-item\">\r\n                <h6>Title url</h6>\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={onUrlChangeHandler}\r\n                  placeholder=\"Title url\"\r\n                  value={embedItems.url}\r\n                />\r\n              </div>\r\n              <div className=\"embed-title-item\">\r\n                <h6>Content text</h6>\r\n                <textarea\r\n                  name=\"embed-content-text\"\r\n                  onChange={onContentTextChangeHandler}\r\n                  value={embedItems.contentText}\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <button type=\"submit\">Send an embed</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useAuthContext } from \"../../Context/Authentication/AuthContext\";\r\nimport useChannels from \"../../hooks/useChannels\";\r\nimport { Button } from \"./Button\";\r\nimport Form from \"./Form\";\r\nimport { getOptionsFor } from \"../../utils/utils\";\r\nexport const SendFile = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [selectedChannel, setSeletedChannel] = useState(null);\r\n  const { channels } = useChannels();\r\n\r\n  const { user } = useAuthContext();\r\n  const onFileChangeHandler = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n  const onMessageChangeHandler = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const onSelectedChannelChangeHandler = ({ value }) => {\r\n    setSeletedChannel(value);\r\n  };\r\n  const submitHandler = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"message\", message);\r\n    formData.append(\"channelId\", selectedChannel);\r\n    try {\r\n      await axios.post(\"/channels/file-upload\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <Form onSubmit={submitHandler}>\r\n      <Form.Group>\r\n        <Form.Title>Send a File</Form.Title>\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Your message</Form.Label>\r\n        <Form.Input value={message} onChange={onMessageChangeHandler} />\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Select a channel</Form.Label>\r\n        <Form.Select\r\n          options={getOptionsFor(channels)}\r\n          onChange={onSelectedChannelChangeHandler}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Select a file from your pc</Form.Label>\r\n        <Form.FileSelect\r\n          title={\r\n            file\r\n              ? file?.name.length > 40\r\n                ? file.name.slice(0, 40) + \"...\"\r\n                : file.name\r\n              : \"Upload file\"\r\n          }\r\n          onChange={onFileChangeHandler}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Button type=\"submit\">Send</Button>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};\r\n","import styles from \"./Alert.module.css\";\r\n\r\nconst variants = {\r\n  error: {\r\n    icon: \"error\",\r\n    styles: {\r\n      backgroundColor: \"#F8D7DA\",\r\n    },\r\n  },\r\n};\r\n\r\nexport const Alert = ({ variant, message }) => {\r\n  return (\r\n    <div style={{ ...variants[variant].styles }} className={styles.alert}>\r\n      <img src={`/icons/${variants[variant].icon}.svg`} alt=\"icon\" />\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nimport { useAuthContext } from \"../../Context/Authentication/AuthContext\";\r\nimport useAxiosWithCallback from \"../../hooks/useAxiosWithCallback\";\r\nimport useChannels from \"../../hooks/useChannels\";\r\nimport { getOptionsFor } from \"../../utils/utils\";\r\nimport { Alert } from \"../Helpers/Alert\";\r\nimport { Container } from \"../Helpers/Container\";\r\n\r\nimport { Loader } from \"../Helpers/Spinners\";\r\nimport { Button } from \"./Button\";\r\nimport Form from \"./Form\";\r\n\r\nexport const SendMessageForm = () => {\r\n  const { isLoading, channels, error: channelError } = useChannels();\r\n  const {\r\n    isLoading: sending,\r\n    error: sendError,\r\n    fetchData: sendMessage,\r\n  } = useAxiosWithCallback();\r\n  const { user } = useAuthContext();\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [selectedChannel, setSelectedChannel] = useState(\"\");\r\n\r\n  if (channelError) {\r\n    return <Alert variant=\"error\" message=\"Something went wrong\" />;\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await sendMessage({\r\n      url: \"/channels\",\r\n      method: \"POST\",\r\n      data: {\r\n        message,\r\n        channelId: selectedChannel,\r\n      },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + user.token,\r\n      },\r\n    });\r\n    setMessage(\"\");\r\n  };\r\n\r\n  const onMessageChangeHandler = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const onSelectedChannelChangeHandler = ({ value }) => {\r\n    setSelectedChannel(value);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Title>Send a message</Form.Title>\r\n      <Form.Group>\r\n        <Form.Label htmlFor=\"message\">Your Message</Form.Label>\r\n        <Form.Input\r\n          id=\"message\"\r\n          type=\"text\"\r\n          placeholder=\"Wassup? Bois\"\r\n          value={message}\r\n          onChange={onMessageChangeHandler}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label htmlFor=\"channel\">Select the channel</Form.Label>\r\n        <Form.Select\r\n          options={getOptionsFor(channels)}\r\n          onChange={onSelectedChannelChangeHandler}\r\n        />\r\n      </Form.Group>\r\n      {\r\n        <Button type=\"submit\" disabled={sending || isLoading} enableLoading>\r\n          Send\r\n        </Button>\r\n      }\r\n    </Form>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Card.module.css\";\r\nexport const Card = ({ title, icon, desc: description }) => {\r\n  return (\r\n    <div className={styles.card}>\r\n      <img src={icon} alt={title} />\r\n      <div>\r\n        <p className={styles.title}>{title}</p>\r\n        <p className={styles.desc}>{description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Cards.module.css\";\r\nexport const Cards = ({ children }) => {\r\n  return <div className={styles.cards}>{children}</div>;\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport { Card } from \"../Components/Helpers/Card\";\r\nimport { Cards } from \"../Components/Helpers/Cards\";\r\n\r\nconst HOMEPAGECARDS = [\r\n  {\r\n    href: \"contribute\",\r\n    title: \"Contribute\",\r\n    image: \"/icons/contribute.svg\",\r\n    desc: \"Send articles and stuffs useful to the communities\",\r\n  },\r\n  {\r\n    href: \"stats\",\r\n    title: \"Stats\",\r\n    image: \"/icons/stats.svg\",\r\n    desc: \"See how the server is going, trend and information\",\r\n  },\r\n];\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <Cards>\r\n      {HOMEPAGECARDS.map(({ href, title, image, desc }) => (\r\n        <Link key={href} to={href}>\r\n          <Card title={title} icon={image} desc={desc} />\r\n        </Link>\r\n      ))}\r\n    </Cards>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { Card } from \"../Components/Helpers/Card\";\r\nimport { Cards } from \"../Components/Helpers/Cards\";\r\n\r\nconst ADMINPAGECARDS = [\r\n  {\r\n    href: \"/send-message\",\r\n    title: \"Message\",\r\n    image: \"/icons/messages.svg\",\r\n    desc: \"Send a message to a channel in the server\",\r\n  },\r\n  {\r\n    href: \"/send-embed\",\r\n    title: \"Embeds\",\r\n    image: \"/icons/embed.svg\",\r\n    desc: \"Send embeds to the server\",\r\n  },\r\n  {\r\n    href: \"/roles\",\r\n    title: \"Roles\",\r\n    image: \"/icons/roles.svg\",\r\n    desc: \"Make the members get roles interactively\",\r\n  },\r\n  {\r\n    href: \"/send-file\",\r\n    title: \"Send a File\",\r\n    image: \"/icons/files.svg\",\r\n    desc: \"Send's file to a particular channel\",\r\n  },\r\n];\r\nexport const Admin = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  return (\r\n    <Cards>\r\n      {ADMINPAGECARDS.map(({ href, title, image, desc }) => (\r\n        <Link key={href} to={`${pathname}${href}`}>\r\n          <Card title={title} icon={image} desc={desc} />\r\n        </Link>\r\n      ))}\r\n    </Cards>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Button } from \"../Components/UI/Button\";\r\nimport { loginUser } from \"../Context/Authentication/action\";\r\nimport { useAuthDispatch } from \"../Context/Authentication/AuthContext\";\r\nimport Form from \"../Components/UI/Form\";\r\n\r\nexport const Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useAuthDispatch();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const from = location.state?.from?.pathname || \"/\";\r\n\r\n  const onSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    await loginUser(dispatch, { email, password });\r\n    navigate(from, { replace: true });\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={onSubmitHandler}>\r\n      <Form.Group>\r\n        <Form.Label>Email</Form.Label>\r\n        <Form.Input\r\n          id=\"email\"\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Input\r\n          id=\"password\"\r\n          value={password}\r\n          type=\"password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Button style={{ width: \"100%\" }} type=\"submit\">\r\n          Login\r\n        </Button>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};\r\n","import { Route, BrowserRouter as Router, Routes } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { RequireAuth } from \"./Components/Auth/RequireAuth\";\r\nimport { Container } from \"./Components/Helpers/Container\";\r\nimport { Navbar } from \"./Components/UI/Navbar\";\r\nimport { Roles } from \"./Components/UI/Roles\";\r\nimport { SendEmbedForm } from \"./Components/UI/SendEmbedForm\";\r\nimport { SendFile } from \"./Components/UI/SendFile\";\r\nimport { SendMessageForm } from \"./Components/UI/SendMessageForm\";\r\nimport { Home } from \"./Pages\";\r\nimport { Admin } from \"./Pages/Admin\";\r\nimport { Login } from \"./Pages/Login\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Container>\r\n        <main>\r\n          <Routes>\r\n            <Route element={<RequireAuth />}>\r\n              <Route path=\"/admin\" element={<Admin />} />\r\n              <Route path=\"/admin/roles\" element={<Roles />} />\r\n              <Route path=\"/admin/send-message\" element={<SendMessageForm />} />\r\n              <Route path=\"/admin/send-embed\" element={<SendEmbedForm />} />\r\n              <Route path=\"/admin/send-file\" element={<SendFile />} />\r\n            </Route>\r\n            <Route path=\"/\" element={<Home />} />\r\n            <Route path=\"/login\" element={<Login />} />\r\n          </Routes>\r\n        </main>\r\n      </Container>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { AuthContextProvider } from \"./Authentication/AuthContext\";\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  return <AuthContextProvider>{children}</AuthContextProvider>;\r\n};\r\n","import ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { ContextProvider } from \"./Context/ContextProvider\";\r\n\r\nReactDOM.render(\r\n  <ContextProvider>\r\n    <App />\r\n  </ContextProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}